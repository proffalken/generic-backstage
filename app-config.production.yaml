app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  title: ${ HEROKU_PROJECT_NAME }
  baseUrl: https://${ HEROKU_PROJECT_NAME }.herokuapp.com

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: https://${ HEROKU_PROJECT_NAME }.herokuapp.com
  listen:
    port: ${ PORT }
    # The following host directive binds to all IPv4 interfaces when its value
    # is "0.0.0.0". This is the most permissive setting. The right value depends
    # on your specific deployment. If you remove the host line entirely, the
    # backend will bind on the interface that corresponds to the backend.baseUrl
    # hostname.
    host: 0.0.0.0

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    ensureExists: false
    pluginDivisionMode: 'schema'
    connection: ${DATABASE_URL}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt
integrations:
  github:
    - host: github.com
      token: ${ GITHUB_TOKEN } # this should be the token from GitHub

auth:
# see https://backstage.io/docs/auth/ to learn about auth providers
  environment: production
  providers:
    github:
      production:
        clientId: ${ GITHUB_AUTH_CLIENT_ID }
        clientSecret: ${ GITHUB_AUTH_CLIENT_SECRET }

catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/software-catalog-overview#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations: 
    - type: github-discovery
      target: ${ GITHUB_DISCOVERY_TARGET }

proxy:
    '/prometheus/api':
      # url to the api and path of your hosted prometheus instance
      target: ${ GRAFANA_PROMETHEUS_URI }
      headers:
        Authorization: ${ GRAFANA_PROMETHEUS_VIEWER_TOKEN }
